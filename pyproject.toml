[build-system]
requires = [ "setuptools>=61.0",]
build-backend = "setuptools.build_meta"

[project]
name = "alita_sdk"
version = "0.3.234"
description = "SDK for building langchain agents using resources from Alita"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [ "Programming Language :: Python :: 3", "Operating System :: OS Independent",]
license = "Apache-2.0"
dependencies = [ "sqlalchemy<2.0.36", "tiktoken>=0.7.0", "openai>=1.55.0", "python-dotenv~=1.0.1", "jinja2~=3.1.3", "pillow~=11.1.0", "requests~=2.3", "pydantic~=2.10.0", "chardet==5.2.0", "fastapi==0.115.9", "httpcore==1.0.7", "urllib3>=2", "certifi==2024.8.30",]
[[project.authors]]
name = "Artem Rozumenko"
email = "artyom.rozumenko@gmail.com"

[[project.authors]]
name = "Mikalai Biazruchka"
email = "mikalai_biazruchka@epam.com"

[[project.authors]]
name = "Roman Mitusov"
email = "roman_mitusov@epam.com"

[[project.authors]]
name = "Ivan Krakhmaliuk"
email = "lifedjik@gmail.com"

[[project.authors]]
name = "Artem Dubrovskiy"
email = "ad13box@gmail.com"

[project.optional-dependencies]
runtime = [ "langchain_core==0.3.49", "langchain<=0.3.22", "langchain_community~=0.3.7", "langchain-openai~=0.3.0", "langgraph-checkpoint-sqlite~=2.0.0", "langgraph-checkpoint-postgres~=2.0.1", "langsmith>=0.3.45", "langgraph>=0.4.8,<0.5", "langchain_chroma~=0.2.2", "langchain-unstructured~=0.1.6", "langchain-postgres~=0.0.13", "keybert==0.8.3", "charset_normalizer==3.3.2", "unstructured[local-inference]==0.16.23", "unstructured_pytesseract==0.3.13", "unstructured_inference==0.8.7", "python-pptx==1.0.2", "pdf2image==1.16.3", "pikepdf==8.7.1", "pypdf==4.3.1", "pdfminer.six==20240706", "opencv-python==4.11.0.86", "python-docx==1.1.2", "openpyxl==3.1.2", "markdown==3.5.1", "beautifulsoup4==4.12.2", "gensim==4.3.3", "chromadb==0.5.20", "pgvector==0.2.5", "scipy==1.13.1", "pytesseract==0.3.13", "reportlab==4.2.5", "svglib==1.5.1", "rlpycairo==0.3.0", "cairocffi==1.7.1", "docx2txt==0.8", "mammoth==1.9.0", "opentelemetry-exporter-otlp-proto-grpc==1.25.0", "opentelemetry_api==1.25.0", "opentelemetry_instrumentation==0.46b0", "grpcio_status==1.63.0rc1", "protobuf==4.25.7", "sentence-transformers==2.7.0",]
tools = [ "dulwich==0.21.6", "paramiko==3.3.1", "pygithub==2.3.0", "python-gitlab==4.5.0", "gitpython==3.1.43", "atlassian-python-api~=3.41", "atlassian_python_api==3.41.16", "jira==3.8.0", "qtest-swagger-client==0.0.3", "testrail-api==1.13.2", "azure-devops==7.1.0b4", "msrest==0.7.1", "python-graphql-client~=0.4.3", "zephyr-python-api==0.1.0", "pyral==1.6.0", "boto3>=1.37.23", "azure-core==1.30.2", "azure-identity==1.16.0", "azure-keyvault-keys==4.9.0", "azure-keyvault-secrets==4.8.0", "azure-mgmt-core==1.4.0", "azure-mgmt-resource==23.0.1", "azure-mgmt-storage==21.1.0", "azure-storage-blob==12.23.1", "azure-search-documents==11.5.2", "PyMySQL==1.1.1", "psycopg2-binary==2.9.10", "Office365-REST-Python-Client==2.5.14", "python-docx==1.1.2", "python-pptx==1.0.2", "pypdf2~=3.0.1", "FigmaPy==2018.1.0", "pandas==2.2.3", "factor_analyzer==0.5.1", "statsmodels==0.14.4", "tabulate==0.9.0", "tree_sitter==0.20.2", "tree-sitter-languages==1.10.2", "astor~=0.8.1", "markdownify~=1.1.0", "requests_openapi==1.0.5", "duckduckgo_search==5.3.0", "playwright>=1.52.0", "google-api-python-client==2.154.0", "wikipedia==1.4.0", "lxml==5.2.2", "beautifulsoup4", "pymupdf==1.24.9", "googlemaps==4.10.0", "yagmail==0.15.293", "pysnc==1.1.10", "shortuuid==1.0.13", "yarl==1.17.1", "langmem==0.0.27", "textract-py3==2.1.1", "slack_sdk==3.35.0", "deltalake==1.0.2", "google_cloud_bigquery==3.34.0",]
community = [ "retry-extended==0.2.3", "pyobjtojson==0.3", "elitea-analyse==0.1.2",]
all = [ "alita-sdk[runtime]", "alita-sdk[tools]", "alita-sdk[community]",]
dev = [ "pytest", "pytest-cov", "black", "flake8", "mypy",]

[project.urls]
Homepage = "https://projectalita.ai"
Issues = "https://github.com/ProjectAlita/alita-sdk/issues"

[tool.setuptools.package-data]
alita_sdk = [ "*.md", "*.txt", "*.yml", "*.yaml",]

[tool.setuptools.packages.find]
where = [ ".",]
exclude = [ "tests*", "venv*", ".*", "dist*", "build*", "__pycache__*",]
